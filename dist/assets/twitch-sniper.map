{"version":3,"sources":["vendor/ember-cli/app-prefix.js","twitch-sniper/adapters/channel.js","twitch-sniper/adapters/stream.js","twitch-sniper/adapters/totalchannel.js","twitch-sniper/adapters/totalstream.js","twitch-sniper/adapters/twitch.js","twitch-sniper/app.js","twitch-sniper/components/channel-result.js","twitch-sniper/components/fa-icon.js","twitch-sniper/components/fa-list.js","twitch-sniper/components/fa-stack.js","twitch-sniper/components/results-list.js","twitch-sniper/components/stream-result.js","twitch-sniper/components/welcome-page.js","twitch-sniper/controllers/sniper.js","twitch-sniper/helpers/app-version.js","twitch-sniper/helpers/calc-time-since-stream.js","twitch-sniper/helpers/calc-total-pages.js","twitch-sniper/helpers/is-no-results.js","twitch-sniper/helpers/is-type-channels.js","twitch-sniper/helpers/is-type-streams.js","twitch-sniper/helpers/pluralize.js","twitch-sniper/helpers/singularize.js","twitch-sniper/initializers/app-version.js","twitch-sniper/initializers/container-debug-adapter.js","twitch-sniper/initializers/data-adapter.js","twitch-sniper/initializers/ember-data.js","twitch-sniper/initializers/export-application-global.js","twitch-sniper/initializers/injectStore.js","twitch-sniper/initializers/store.js","twitch-sniper/initializers/transforms.js","twitch-sniper/instance-initializers/ember-data.js","twitch-sniper/models/channel.js","twitch-sniper/models/stream.js","twitch-sniper/models/totalchannel.js","twitch-sniper/models/totalstream.js","twitch-sniper/resolver.js","twitch-sniper/router.js","twitch-sniper/routes/application.js","twitch-sniper/routes/sniper.js","twitch-sniper/serializers/channel.js","twitch-sniper/serializers/stream.js","twitch-sniper/serializers/totalchannel.js","twitch-sniper/serializers/totalstream.js","twitch-sniper/services/ajax.js","twitch-sniper/templates/application.js","twitch-sniper/templates/components/channel-result.js","twitch-sniper/templates/components/results-list.js","twitch-sniper/templates/components/stream-result.js","twitch-sniper/templates/sniper.js","twitch-sniper/transforms/channel.js","twitch-sniper/transforms/preview.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('twitch-sniper/adapters/channel', ['exports', 'twitch-sniper/adapters/twitch'], function (exports, _twitchSniperAdaptersTwitch) {\n  exports['default'] = _twitchSniperAdaptersTwitch['default'].extend({\n    pathForType: function pathForType() {\n      return 'channels';\n    }\n  });\n});","define('twitch-sniper/adapters/stream', ['exports', 'twitch-sniper/adapters/twitch'], function (exports, _twitchSniperAdaptersTwitch) {\n  exports['default'] = _twitchSniperAdaptersTwitch['default'].extend({\n    pathForType: function pathForType() {\n      return 'streams';\n    }\n  });\n});","define('twitch-sniper/adapters/totalchannel', ['exports', 'twitch-sniper/adapters/twitch'], function (exports, _twitchSniperAdaptersTwitch) {\n  exports['default'] = _twitchSniperAdaptersTwitch['default'].extend({\n    pathForType: function pathForType() {\n      return 'channels';\n    }\n  });\n});","define('twitch-sniper/adapters/totalstream', ['exports', 'twitch-sniper/adapters/twitch'], function (exports, _twitchSniperAdaptersTwitch) {\n  exports['default'] = _twitchSniperAdaptersTwitch['default'].extend({\n    pathForType: function pathForType() {\n      return 'streams';\n    }\n  });\n});","define('twitch-sniper/adapters/twitch', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].RESTAdapter.extend({\n    host: 'https://api.twitch.tv',\n    namespace: 'kraken/search',\n    headers: {\n      'Accept': 'application/vnd.twitchtv.v5+json',\n      'Client-ID': '24vg2u8o4aj2ddz79ps5j0y0em1krv'\n    }\n  });\n});","define('twitch-sniper/app', ['exports', 'ember', 'twitch-sniper/resolver', 'ember-load-initializers', 'twitch-sniper/config/environment'], function (exports, _ember, _twitchSniperResolver, _emberLoadInitializers, _twitchSniperConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _twitchSniperConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _twitchSniperConfigEnvironment['default'].podModulePrefix,\n    Resolver: _twitchSniperResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _twitchSniperConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('twitch-sniper/components/channel-result', ['exports', 'ember'], function (exports, _ember) {\n  var Component = _ember['default'].Component;\n  var get = _ember['default'].get;\n  var set = _ember['default'].set;\n  exports['default'] = Component.extend({\n    tagName: 'div',\n    classNames: ['channel-result'],\n    // properties/attributes\n    displayName: null,\n    name: null,\n    imageURL: null,\n    followers: 0,\n    views: 0,\n    language: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n    },\n\n    didReceiveAttrs: function didReceiveAttrs() {\n      this._super.apply(this, arguments);\n      var imageURL = get(this, 'imageURL');\n\n      if (imageURL == null) {\n        set(this, 'imageURL', '/avatar.png');\n      } else {\n        set(this, 'imageURL', imageURL);\n      }\n    }\n  });\n});","define('twitch-sniper/components/fa-icon', ['exports', 'ember-font-awesome/components/fa-icon'], function (exports, _emberFontAwesomeComponentsFaIcon) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaIcon['default'];\n    }\n  });\n});","define('twitch-sniper/components/fa-list', ['exports', 'ember-font-awesome/components/fa-list'], function (exports, _emberFontAwesomeComponentsFaList) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaList['default'];\n    }\n  });\n});","define('twitch-sniper/components/fa-stack', ['exports', 'ember-font-awesome/components/fa-stack'], function (exports, _emberFontAwesomeComponentsFaStack) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberFontAwesomeComponentsFaStack['default'];\n    }\n  });\n});","define('twitch-sniper/components/results-list', ['exports', 'ember'], function (exports, _ember) {\n  var Component = _ember['default'].Component;\n  var get = _ember['default'].get;\n  var set = _ember['default'].set;\n  exports['default'] = _ember['default'].Component.extend({\n    tagName: 'div',\n    classNames: ['results-list'],\n    // properties/attributes\n    type: null,\n    results: null,\n    englishOnly: false,\n\n    didReceiveAttrs: function didReceiveAttrs() {\n      this._super.apply(this, arguments);\n    }\n\n  });\n});","define('twitch-sniper/components/stream-result', ['exports', 'ember'], function (exports, _ember) {\n  var Component = _ember['default'].Component;\n  var get = _ember['default'].get;\n  var set = _ember['default'].set;\n  exports['default'] = Component.extend({\n    tagName: 'div',\n    classNames: ['stream-result'],\n    // properties/attributes\n    streamName: null,\n    displayName: null,\n    createdDate: null,\n    imageURL: null,\n    gameName: null,\n    viewers: 0,\n    description: null,\n\n    didReceiveAttrs: function didReceiveAttrs() {\n      this._super.apply(this, arguments);\n    }\n\n  });\n});","define('twitch-sniper/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _emberWelcomePageComponentsWelcomePage) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberWelcomePageComponentsWelcomePage['default'];\n    }\n  });\n});","define('twitch-sniper/controllers/sniper', ['exports', 'ember'], function (exports, _ember) {\n  var Controller = _ember['default'].Controller;\n  var get = _ember['default'].get;\n  var set = _ember['default'].set;\n  var computed = _ember['default'].computed;\n  exports['default'] = Controller.extend({\n    queryParams: ['query', 'type', 'limit', 'offset'],\n    query: 'starcraft',\n    type: 'streams',\n    limit: 10,\n    offset: 0,\n    currentPage: computed('limit', 'offset', function () {\n      var limit = get(this, 'limit');\n      var offset = get(this, 'offset');\n      return Math.floor(offset / limit) + 1;\n    }),\n\n    actions: {\n      searchStreams: function searchStreams() {\n        var searchInput = get(this, 'searchInput');\n        //console.log(searchInput);\n        if (searchInput !== undefined && searchInput != null && searchInput != '') {\n          set(this, 'query', searchInput);\n          set(this, 'type', 'streams');\n          set(this, 'offset', 0);\n        }\n      },\n\n      searchChannels: function searchChannels() {\n        var searchInput = get(this, 'searchInput');\n        //console.log(searchInput);\n        if (searchInput !== undefined && searchInput != null && searchInput != '') {\n          set(this, 'query', searchInput);\n          set(this, 'type', 'channels');\n          set(this, 'offset', 0);\n        }\n      },\n\n      nextPage: function nextPage(total) {\n        var limit = get(this, 'limit');\n        var offset = get(this, 'offset');\n        var newOffset = offset + limit;\n        if (newOffset < total) {\n          set(this, 'offset', newOffset);\n        }\n      },\n\n      prevPage: function prevPage() {\n        var limit = get(this, 'limit');\n        var offset = get(this, 'offset');\n        var newOffset = offset - limit;\n        if (newOffset >= 0) {\n          set(this, 'offset', newOffset);\n        }\n      }\n    }\n  });\n});","define('twitch-sniper/helpers/app-version', ['exports', 'ember', 'twitch-sniper/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _ember, _twitchSniperConfigEnvironment, _emberCliAppVersionUtilsRegexp) {\n  exports.appVersion = appVersion;\n  var version = _twitchSniperConfigEnvironment['default'].APP.version;\n\n  function appVersion(_) {\n    var hash = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (hash.hideSha) {\n      return version.match(_emberCliAppVersionUtilsRegexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_emberCliAppVersionUtilsRegexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(appVersion);\n});","define('twitch-sniper/helpers/calc-time-since-stream', ['exports', 'ember'], function (exports, _ember) {\n  exports.calcTimeSinceStream = calcTimeSinceStream;\n\n  function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n  function calcTimeSinceStream(_ref) {\n    var _ref2 = _toArray(_ref);\n\n    var date = _ref2[0];\n\n    var rest = _ref2.slice(1);\n\n    var response = date.toString();\n\n    var current = new Date();\n    var millis = current.getTime() - date.getTime();\n    var hours = Math.floor(millis / 1000 / 60 / 60);\n    if (hours == 0) {\n      // calc minutes\n      var minutes = Math.floor(millis / 1000 / 60);\n      if (minutes == 0) {\n        response = 'Began streaming just now!';\n      } else {\n        response = 'Began streaming ' + minutes + ' minutes ago.';\n      }\n    } else {\n      response = 'Began streaming ' + hours + ' hours ago.';\n    }\n    return response;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(calcTimeSinceStream);\n});","define('twitch-sniper/helpers/calc-total-pages', ['exports', 'ember'], function (exports, _ember) {\n  exports.calcTotalPages = calcTotalPages;\n\n  function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n  function calcTotalPages(_ref) {\n    var _ref2 = _toArray(_ref);\n\n    var limit = _ref2[0];\n    var totalStreams = _ref2[1];\n\n    var rest = _ref2.slice(2);\n\n    return Math.floor(totalStreams / limit) + 1;\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(calcTotalPages);\n});","define('twitch-sniper/helpers/is-no-results', ['exports', 'ember'], function (exports, _ember) {\n  exports.isNoResults = isNoResults;\n\n  function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n  function isNoResults(_ref) {\n    var _ref2 = _toArray(_ref);\n\n    var totalResults = _ref2[0];\n\n    var rest = _ref2.slice(1);\n\n    if (totalResults == 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(isNoResults);\n});","define('twitch-sniper/helpers/is-type-channels', ['exports', 'ember'], function (exports, _ember) {\n  exports.isTypeChannels = isTypeChannels;\n\n  function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n  function isTypeChannels(_ref) {\n    var _ref2 = _toArray(_ref);\n\n    var type = _ref2[0];\n\n    var rest = _ref2.slice(1);\n\n    if (type == 'channels') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(isTypeChannels);\n});","define('twitch-sniper/helpers/is-type-streams', ['exports', 'ember'], function (exports, _ember) {\n  exports.isTypeStreams = isTypeStreams;\n\n  function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\n  function isTypeStreams(_ref) {\n    var _ref2 = _toArray(_ref);\n\n    var type = _ref2[0];\n\n    var rest = _ref2.slice(1);\n\n    if (type == 'streams') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  exports['default'] = _ember['default'].Helper.helper(isTypeStreams);\n});","define('twitch-sniper/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('twitch-sniper/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('twitch-sniper/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'twitch-sniper/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _twitchSniperConfigEnvironment) {\n  var _config$APP = _twitchSniperConfigEnvironment['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(name, version)\n  };\n});","define('twitch-sniper/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('twitch-sniper/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('twitch-sniper/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.Controller.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('twitch-sniper/initializers/export-application-global', ['exports', 'ember', 'twitch-sniper/config/environment'], function (exports, _ember, _twitchSniperConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_twitchSniperConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _twitchSniperConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_twitchSniperConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('twitch-sniper/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('twitch-sniper/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('twitch-sniper/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"twitch-sniper/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('twitch-sniper/models/channel', ['exports', 'ember-data'], function (exports, _emberData) {\n  var Model = _emberData['default'].Model;\n  var attr = _emberData['default'].attr;\n  exports['default'] = Model.extend({\n    broadcaster_language: attr('string'),\n    created_at: attr('date'),\n    display_name: attr('string'),\n    followers: attr('number'),\n    game: attr('string', { defaultValue: '' }),\n    language: attr('string'),\n    logo: attr('string'),\n    mature: attr('boolean'),\n    name: attr('string'),\n    partner: attr('boolean'),\n    profile_banner: attr('string'),\n    profile_banner_background_color: attr('string'),\n    status: attr('string'),\n    updated_at: attr('date'),\n    url: attr('string'),\n    video_banner: attr('string'),\n    views: attr('number', { defaultValue: 0 })\n  });\n});","define('twitch-sniper/models/stream', ['exports', 'ember-data'], function (exports, _emberData) {\n  var Model = _emberData['default'].Model;\n  var attr = _emberData['default'].attr;\n  exports['default'] = Model.extend({\n    channel: attr('channel'),\n\n    // (routes, models, and serializers should always reference singular objects - ember is smart enough to \"pluralize\" them)\n    // ember data will always gen or get an id, so it doesn't have to be explicitly declared\n    created_at: attr('date'),\n    game: attr('string', { defaultValue: '' }),\n    viewers: attr('number', { defaultValue: 0 }),\n    preview: attr('preview')\n  });\n});","define('twitch-sniper/models/totalchannel', ['exports', 'ember-data'], function (exports, _emberData) {\n  var Model = _emberData['default'].Model;\n  var attr = _emberData['default'].attr;\n  exports['default'] = Model.extend({\n    total: attr('number', { defaultValue: 0 })\n  });\n});","define('twitch-sniper/models/totalstream', ['exports', 'ember-data'], function (exports, _emberData) {\n  var Model = _emberData['default'].Model;\n  var attr = _emberData['default'].attr;\n  exports['default'] = Model.extend({\n    total: attr('number', { defaultValue: 0 })\n  });\n});","define('twitch-sniper/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('twitch-sniper/router', ['exports', 'ember', 'twitch-sniper/config/environment'], function (exports, _ember, _twitchSniperConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _twitchSniperConfigEnvironment['default'].locationType,\n    rootURL: _twitchSniperConfigEnvironment['default'].rootURL\n  });\n\n  Router.map(function () {\n    this.route('sniper');\n  });\n\n  exports['default'] = Router;\n});","define('twitch-sniper/routes/application', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    redirect: function redirect() {\n      this.transitionTo('sniper');\n    }\n  });\n});","define('twitch-sniper/routes/sniper', ['exports', 'ember', 'rsvp'], function (exports, _ember, _rsvp) {\n  exports['default'] = _ember['default'].Route.extend({\n    queryParams: {\n      query: {\n        refreshModel: true\n      },\n      type: {\n        refreshModel: true\n      },\n      limit: {\n        refreshModel: true\n      },\n      offset: {\n        refreshModel: true\n      }\n    },\n\n    model: function model(params) {\n      //console.log(params);\n      if (params.type == 'streams') {\n        return _rsvp['default'].hash({\n          streams: this.get('store').query('stream', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          }),\n          total: this.get('store').queryRecord('totalstream', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          })\n        });\n      } else if (params.type == 'channels') {\n        return _rsvp['default'].hash({\n          channels: this.get('store').query('channel', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          }),\n          total: this.get('store').queryRecord('totalchannel', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          })\n        });\n      } else if (params.type == 'games') {\n        return _rsvp['default'].hash({\n          streams: this.get('store').query('stream', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          }),\n          total: this.get('store').queryRecord('totalstream', {\n            query: params.query,\n            limit: params.limit,\n            offset: params.offset\n          })\n        });\n      }\n    },\n\n    setupController: function setupController(controller, model) {\n      //console.log('setup', model);\n      //this._super(controller, model);\n      _ember['default'].set(controller, 'results', model);\n    }\n  });\n});","define('twitch-sniper/serializers/channel', ['exports', 'ember-data'], function (exports, _emberData) {\n  var RESTSerializer = _emberData['default'].RESTSerializer;\n  exports['default'] = RESTSerializer.extend({\n    normalizeResponse: function normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n      //console.log(payload);\n      payload = { channels: payload.channels };\n      payload.channels.forEach(function (channel) {\n        channel.id = channel._id;\n      });\n      //console.log(payload);\n      return this._super(store, primaryModelClass, payload, id, requestType);\n    }\n  });\n});","define('twitch-sniper/serializers/stream', ['exports', 'ember-data'], function (exports, _emberData) {\n  var RESTSerializer = _emberData['default'].RESTSerializer;\n  exports['default'] = RESTSerializer.extend({\n    normalizeResponse: function normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n      payload = { streams: payload.streams };\n      payload.streams.forEach(function (stream) {\n        stream.id = stream._id;\n      });\n      //console.log(payload);\n      return this._super(store, primaryModelClass, payload, id, requestType);\n    }\n  });\n});","define('twitch-sniper/serializers/totalchannel', ['exports', 'ember-data'], function (exports, _emberData) {\n  var RESTSerializer = _emberData['default'].RESTSerializer;\n  exports['default'] = RESTSerializer.extend({\n    normalizeResponse: function normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n      payload = { totalchannels: { id: 1, total: payload._total } };\n      //console.log(payload);\n      return this._super(store, primaryModelClass, payload, id, requestType);\n    }\n  });\n});","define('twitch-sniper/serializers/totalstream', ['exports', 'ember-data'], function (exports, _emberData) {\n  var RESTSerializer = _emberData['default'].RESTSerializer;\n  exports['default'] = RESTSerializer.extend({\n    normalizeResponse: function normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n      payload = { totalstreams: { id: 1, total: payload._total } };\n      //console.log(payload);\n      return this._super(store, primaryModelClass, payload, id, requestType);\n    }\n  });\n});","define('twitch-sniper/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define(\"twitch-sniper/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"3Pfh0z3r\", \"block\": \"{\\\"statements\\\":[[\\\"append\\\",[\\\"unknown\\\",[\\\"outlet\\\"]],false],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"twitch-sniper/templates/application.hbs\" } });\n});","define(\"twitch-sniper/templates/components/channel-result\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"Ufn+dB2t\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"img\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"preview\\\"],[\\\"dynamic-attr\\\",\\\"src\\\",[\\\"unknown\\\",[\\\"imageURL\\\"]],null],[\\\"static-attr\\\",\\\"alt\\\",\\\"\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"info\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"strong\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"displayName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"aside\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"followers\\\"]],false],[\\\"text\\\",\\\" followers\\\"],[\\\"close-element\\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"views\\\"]],false],[\\\"text\\\",\\\" views\\\"],[\\\"close-element\\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Language: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"language\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"twitch-sniper/templates/components/channel-result.hbs\" } });\n});","define(\"twitch-sniper/templates/components/results-list\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"0XK2lxiK\", \"block\": \"{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"is-no-results\\\"],[[\\\"get\\\",[\\\"results\\\",\\\"total\\\",\\\"total\\\"]]],null]],null,6,5]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[{\\\"statements\\\":[[\\\"text\\\",\\\"        \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"dynamic-attr\\\",\\\"href\\\",[\\\"unknown\\\",[\\\"channel\\\",\\\"url\\\"]],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"channel-result\\\"],null,[[\\\"displayName\\\",\\\"name\\\",\\\"imageURL\\\",\\\"followers\\\",\\\"views\\\",\\\"language\\\"],[[\\\"get\\\",[\\\"channel\\\",\\\"display_name\\\"]],[\\\"get\\\",[\\\"channel\\\",\\\"name\\\"]],[\\\"get\\\",[\\\"channel\\\",\\\"logo\\\"]],[\\\"get\\\",[\\\"channel\\\",\\\"followers\\\"]],[\\\"get\\\",[\\\"channel\\\",\\\"views\\\"]],[\\\"get\\\",[\\\"channel\\\",\\\"language\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"channel\\\"]},{\\\"statements\\\":[[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"results\\\",\\\"channels\\\"]]],null,0]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"is-type-channels\\\"],[[\\\"get\\\",[\\\"type\\\"]]],null]],null,1],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"      \\\"],[\\\"open-element\\\",\\\"a\\\",[]],[\\\"dynamic-attr\\\",\\\"href\\\",[\\\"unknown\\\",[\\\"stream\\\",\\\"channel\\\",\\\"url\\\"]],null],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"stream-result\\\"],null,[[\\\"streamName\\\",\\\"displayName\\\",\\\"createdDate\\\",\\\"imageURL\\\",\\\"gameName\\\",\\\"viewers\\\"],[[\\\"get\\\",[\\\"stream\\\",\\\"channel\\\",\\\"status\\\"]],[\\\"get\\\",[\\\"stream\\\",\\\"channel\\\",\\\"display_name\\\"]],[\\\"get\\\",[\\\"stream\\\",\\\"created_at\\\"]],[\\\"get\\\",[\\\"stream\\\",\\\"preview\\\",\\\"large\\\"]],[\\\"get\\\",[\\\"stream\\\",\\\"game\\\"]],[\\\"get\\\",[\\\"stream\\\",\\\"viewers\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"stream\\\"]},{\\\"statements\\\":[[\\\"block\\\",[\\\"each\\\"],[[\\\"get\\\",[\\\"results\\\",\\\"streams\\\"]]],null,3],[\\\"text\\\",\\\"\\\\n\\\\n  \\\"],[\\\"comment\\\",\\\" channels \\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"comment\\\",\\\" streams \\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"block\\\",[\\\"if\\\"],[[\\\"helper\\\",[\\\"is-type-streams\\\"],[[\\\"get\\\",[\\\"type\\\"]]],null]],null,4,2],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[\\\"text\\\",\\\"  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"searchWarning\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"p\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"strong\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"No Results Found.\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Please try a different search.\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[]}],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"twitch-sniper/templates/components/results-list.hbs\" } });\n});","define(\"twitch-sniper/templates/components/stream-result\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"/TF2zNvn\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"img\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"preview\\\"],[\\\"dynamic-attr\\\",\\\"src\\\",[\\\"unknown\\\",[\\\"imageURL\\\"]],null],[\\\"static-attr\\\",\\\"alt\\\",\\\"\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"info\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"strong\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"streamName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"aside\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"gameName\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\" -\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"viewers\\\"]],false],[\\\"text\\\",\\\" viewers\\\"],[\\\"close-element\\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"displayName\\\"]],false],[\\\"close-element\\\"],[\\\"open-element\\\",\\\"br\\\",[]],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"calc-time-since-stream\\\"],[[\\\"get\\\",[\\\"createdDate\\\"]]],null],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"twitch-sniper/templates/components/stream-result.hbs\" } });\n});","define(\"twitch-sniper/templates/sniper\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template({ \"id\": \"d4n3leVf\", \"block\": \"{\\\"statements\\\":[[\\\"open-element\\\",\\\"main\\\",[]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"img\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"wallpaper\\\"],[\\\"static-attr\\\",\\\"src\\\",\\\"/wallpaper.jpg\\\"],[\\\"static-attr\\\",\\\"alt\\\",\\\"\\\"],[\\\"flush-element\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"sniper-cont\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"search\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"input\\\"],null,[[\\\"type\\\",\\\"enter\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"search\\\",\\\"inputSearchQuery\\\",[\\\"get\\\",[\\\"searchInput\\\"]],\\\"Search Query...\\\"]]],false],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"searchStreams\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"searchStreams\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Search Streams\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"searchChannels\\\"],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"searchChannels\\\"]],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Search Channels\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n    \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"results\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n      \\\"],[\\\"open-element\\\",\\\"div\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"results-nav\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"strong\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"totalResults\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"Total results: \\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"results\\\",\\\"total\\\",\\\"total\\\"]],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"open-element\\\",\\\"span\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"pagination\\\"],[\\\"flush-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"prevPage\\\"]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"chevron-left\\\"],null],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"label\\\",[]],[\\\"static-attr\\\",\\\"class\\\",\\\"page\\\"],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"unknown\\\",[\\\"currentPage\\\"]],false],[\\\"text\\\",\\\" / \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"calc-total-pages\\\"],[[\\\"get\\\",[\\\"limit\\\"]],[\\\"get\\\",[\\\"results\\\",\\\"total\\\",\\\"total\\\"]]],null],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n          \\\"],[\\\"open-element\\\",\\\"button\\\",[]],[\\\"modifier\\\",[\\\"action\\\"],[[\\\"get\\\",[null]],\\\"nextPage\\\",[\\\"get\\\",[\\\"results\\\",\\\"total\\\",\\\"total\\\"]]]],[\\\"flush-element\\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"fa-icon\\\"],[\\\"chevron-right\\\"],null],false],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n        \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n      \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\\n      \\\"],[\\\"append\\\",[\\\"helper\\\",[\\\"results-list\\\"],null,[[\\\"results\\\",\\\"type\\\"],[[\\\"get\\\",[\\\"results\\\"]],[\\\"get\\\",[\\\"type\\\"]]]]],false],[\\\"text\\\",\\\"\\\\n\\\\n    \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n  \\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"],[\\\"close-element\\\"],[\\\"text\\\",\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"blocks\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"twitch-sniper/templates/sniper.hbs\" } });\n});","define('twitch-sniper/transforms/channel', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Transform.extend({\n    deserialize: function deserialize(serialized) {\n      return Ember.Object.create(serialized);\n    },\n\n    serialize: function serialize(deserialized) {\n      return deserialized;\n    }\n  });\n});","define('twitch-sniper/transforms/preview', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Transform.extend({\n    deserialize: function deserialize(serialized) {\n      return Ember.Object.create(serialized);\n    },\n\n    serialize: function serialize(deserialized) {\n      return deserialized;\n    }\n  });\n});","\n","define('twitch-sniper/config/environment', ['ember'], function(Ember) {\n  var prefix = 'twitch-sniper';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"twitch-sniper/app\")[\"default\"].create({\"name\":\"twitch-sniper\",\"version\":\"0.0.0+e6a0bc5c\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"twitch-sniper.js"}